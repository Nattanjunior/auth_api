## Create admin (TEMPORÁRIO - já criado)
POST http://localhost:3000/auth/create-admin
Content-Type: application/json

###

# @name adminLogin
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "email": "admin@test.com",
  "password": "admin123"
}
###

@tokenAdmin = {{adminLogin.response.body.access_token}}

###


## Test Users Endpoint
GET http://localhost:3000/users
Authorization: Bearer {{tokenAdmin}}

###

## Test Posts Endpoint
GET http://localhost:3000/posts
Authorization: Bearer {{tokenAdmin}}

###

## Create Reader
POST http://localhost:3000/users
Content-Type: application/json
Authorization: Bearer {{tokenAdmin}}

{
  "name": "Reader",
  "email": "reader@user.com",
  "password": "reader",
  "role": "READER"
}

###

## Create Writer
POST http://localhost:3000/users
Content-Type: application/json
Authorization: Bearer {{tokenAdmin}}

{
  "name": "Writer",
  "email": "writer@user.com",
  "password": "writer",
  "role": "WRITER"
}

###

# @name readerLogin
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "email": "reader@user.com",
  "password": "reader"
}
###
@tokenReader = {{readerLogin.response.body.access_token}}

###

# @name writerLogin
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "email": "writer@user.com",
  "password": "writer"
}
###
@tokenWriter = {{writerLogin.response.body.access_token}}

###

## Test Create Post (Reader should fail)
POST http://localhost:3000/posts
Content-Type: application/json
Authorization: Bearer {{tokenReader}}

{
  "title":"My favorite post in year",
  "content":"This is my favorite post",
  "published":true
}

###

## Test Create Post (Writer should work)
POST http://localhost:3000/posts
Content-Type: application/json
Authorization: Bearer {{tokenWriter}}

{
  "title":"Writer's post",
  "content":"This is a post by writer",
  "published":true
}

###

## OAuth Config Status
GET http://localhost:3000/auth/config/oauth

###